name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: test_password
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U test_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache cargo build
        uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL to be ready..."
          sleep 10
      
      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          sleep 5
      
      - name: Run tests with MySQL
        env:
          TEST_MYSQL_DB_HOST: localhost
          TEST_MYSQL_DB_PORT: 3306
          TEST_MYSQL_DB_USERNAME: root
          TEST_MYSQL_DB_PASSWORD: test_password
          TEST_MYSQL_DB_DATABASE: test_db
        run: cargo test --features db-mysql --lib -- db::mysql
      
      - name: Run tests with PostgreSQL
        env:
          TEST_POSTGRES_DB_HOST: localhost
          TEST_POSTGRES_DB_PORT: 5432
          TEST_POSTGRES_DB_USERNAME: test_user
          TEST_POSTGRES_DB_PASSWORD: test_password
          TEST_POSTGRES_DB_DATABASE: test_db
        run: cargo test --features db-postgres --lib -- db::postgres
  
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      
      - name: Check formatting
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
  
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        feature:
          - db-mysql
          - db-postgres
          - db-all
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build with feature ${{ matrix.feature }}
        run: cargo build --features ${{ matrix.feature }}
